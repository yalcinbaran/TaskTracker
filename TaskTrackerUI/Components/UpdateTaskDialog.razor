@inject IDialogService DialogService
@inject IDialogReference DialogReference
@inject ITaskApiService _taskApiService

@code {
    [Parameter] public TaskItemDTO Task { get; set; } = default!;
}

<MudDialog>
    <DialogContent>
        <MudForm Model="@Task">
            <MudTextField Label="Görev Başlığı" @bind-Value="Task.Title" />
            <MudTextField Label="Açıklama" @bind-Value="Task.Description" />

            <MudSelect T="string" Label="Öncelik" @bind-Value="Task.PriorityName">
                @foreach (var priority in _taskApiService.GetPrioritiesAsync().Result)
                {
                    <MudSelectItem Value="@priority.Name">@priority.Name</MudSelectItem>
                }
            </MudSelect>

            <MudSelect T="string" Label="Durum" @bind-Value="Task.TaskStateName">
                @foreach (var state in _taskApiService.GetStatesAsync().Result)
                {
                    <MudSelectItem Value="@state.Name">@state.Name</MudSelectItem>
                }
            </MudSelect>

            <MudDatePicker @bind-Value="Task.DueDate" DateFormat="dd.MM.yyyy" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Update">Güncelle</MudButton>
        <MudButton OnClick="Cancel">İptal</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private void Update()
    {
        // Update işlemini tetikle
        DialogReference.Close(DialogResult.Ok(Task));

    }

    private void Cancel()
    {
        DialogReference.Close(DialogResult.Cancel());
    }
}
